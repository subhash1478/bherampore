{"version":3,"sources":["../../src/pages/phone-verification/phone-verification.module.ts","../../node_modules/@ionic-native/android-permissions/index.js","../../src/pages/phone-verification/phone-verification.ts"],"names":[],"mappings":"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","file":"9.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { IonicPageModule } from 'ionic-angular';\r\nimport { PhoneVerificationPage } from './phone-verification';\r\nimport { AndroidPermissions} from '@ionic-native/android-permissions';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PhoneVerificationPage,\r\n  ],\r\n  imports: [\r\n    IonicPageModule.forChild(PhoneVerificationPage),\r\n  ],\r\n  providers:[AndroidPermissions]\r\n})\r\nexport class PhoneVerificationPageModule {}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/phone-verification/phone-verification.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name Android Permissions\n * @description\n * This plugin is designed to support Android new permissions checking mechanism.\n *\n * You can find all permissions here: https://developer.android.com/reference/android/Manifest.permission.html\n *\n * @usage\n * ```\n * import { AndroidPermissions } from '@ionic-native/android-permissions';\n *\n *\n * constructor(private androidPermissions: AndroidPermissions) { }\n *\n * ...\n *\n * this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.CAMERA).then(\n *   result => console.log('Has permission?',result.hasPermission),\n *   err => this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.CAMERA)\n * );\n *\n * this.androidPermissions.requestPermissions([this.androidPermissions.PERMISSION.CAMERA, this.androidPermissions.PERMISSION.GET_ACCOUNTS]);\n *\n * ```\n *\n * Android 26 and above: due to Android 26's changes to permissions handling (permissions are requested at time of use rather than at runtime,) if your app does not include any functions (eg. other Ionic Native plugins) that utilize a particular permission, then `requestPermission()` and `requestPermissions()` will resolve immediately with no prompt shown to the user.  Thus, you must include a function utilizing the feature you would like to use before requesting permission for it.\n */\nvar AndroidPermissions = (function (_super) {\n    __extends(AndroidPermissions, _super);\n    function AndroidPermissions() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.PERMISSION = {\n            ACCESS_CHECKIN_PROPERTIES: 'android.permission.ACCESS_CHECKIN_PROPERTIES',\n            ACCESS_COARSE_LOCATION: 'android.permission.ACCESS_COARSE_LOCATION',\n            ACCESS_FINE_LOCATION: 'android.permission.ACCESS_FINE_LOCATION',\n            ACCESS_LOCATION_EXTRA_COMMANDS: 'android.permission.ACCESS_LOCATION_EXTRA_COMMANDS',\n            ACCESS_MOCK_LOCATION: 'android.permission.ACCESS_MOCK_LOCATION',\n            ACCESS_NETWORK_STATE: 'android.permission.ACCESS_NETWORK_STATE',\n            ACCESS_SURFACE_FLINGER: 'android.permission.ACCESS_SURFACE_FLINGER',\n            ACCESS_WIFI_STATE: 'android.permission.ACCESS_WIFI_STATE',\n            ACCOUNT_MANAGER: 'android.permission.ACCOUNT_MANAGER',\n            ADD_VOICEMAIL: 'com.android.voicemail.permission.ADD_VOICEMAIL',\n            AUTHENTICATE_ACCOUNTS: 'android.permission.AUTHENTICATE_ACCOUNTS',\n            BATTERY_STATS: 'android.permission.BATTERY_STATS',\n            BIND_ACCESSIBILITY_SERVICE: 'android.permission.BIND_ACCESSIBILITY_SERVICE',\n            BIND_APPWIDGET: 'android.permission.BIND_APPWIDGET',\n            BIND_CARRIER_MESSAGING_SERVICE: 'android.permission.BIND_CARRIER_MESSAGING_SERVICE',\n            BIND_DEVICE_ADMIN: 'android.permission.BIND_DEVICE_ADMIN',\n            BIND_DREAM_SERVICE: 'android.permission.BIND_DREAM_SERVICE',\n            BIND_INPUT_METHOD: 'android.permission.BIND_INPUT_METHOD',\n            BIND_NFC_SERVICE: 'android.permission.BIND_NFC_SERVICE',\n            BIND_NOTIFICATION_LISTENER_SERVICE: 'android.permission.BIND_NOTIFICATION_LISTENER_SERVICE',\n            BIND_PRINT_SERVICE: 'android.permission.BIND_PRINT_SERVICE',\n            BIND_REMOTEVIEWS: 'android.permission.BIND_REMOTEVIEWS',\n            BIND_TEXT_SERVICE: 'android.permission.BIND_TEXT_SERVICE',\n            BIND_TV_INPUT: 'android.permission.BIND_TV_INPUT',\n            BIND_VOICE_INTERACTION: 'android.permission.BIND_VOICE_INTERACTION',\n            BIND_VPN_SERVICE: 'android.permission.BIND_VPN_SERVICE',\n            BIND_WALLPAPER: 'android.permission.BIND_WALLPAPER',\n            BLUETOOTH: 'android.permission.BLUETOOTH',\n            BLUETOOTH_ADMIN: 'android.permission.BLUETOOTH_ADMIN',\n            BLUETOOTH_PRIVILEGED: 'android.permission.BLUETOOTH_PRIVILEGED',\n            BODY_SENSORS: 'android.permission.BODY_SENSORS',\n            BRICK: 'android.permission.BRICK',\n            BROADCAST_PACKAGE_REMOVED: 'android.permission.BROADCAST_PACKAGE_REMOVED',\n            BROADCAST_SMS: 'android.permission.BROADCAST_SMS',\n            BROADCAST_STICKY: 'android.permission.BROADCAST_STICKY',\n            BROADCAST_WAP_PUSH: 'android.permission.BROADCAST_WAP_PUSH',\n            CALL_PHONE: 'android.permission.CALL_PHONE',\n            CALL_PRIVILEGED: 'android.permission.CALL_PRIVILEGED',\n            CAMERA: 'android.permission.CAMERA',\n            CAPTURE_AUDIO_OUTPUT: 'android.permission.CAPTURE_AUDIO_OUTPUT',\n            CAPTURE_SECURE_VIDEO_OUTPUT: 'android.permission.CAPTURE_SECURE_VIDEO_OUTPUT',\n            CAPTURE_VIDEO_OUTPUT: 'android.permission.CAPTURE_VIDEO_OUTPUT',\n            CHANGE_COMPONENT_ENABLED_STATE: 'android.permission.CHANGE_COMPONENT_ENABLED_STATE',\n            CHANGE_CONFIGURATION: 'android.permission.CHANGE_CONFIGURATION',\n            CHANGE_NETWORK_STATE: 'android.permission.CHANGE_NETWORK_STATE',\n            CHANGE_WIFI_MULTICAST_STATE: 'android.permission.CHANGE_WIFI_MULTICAST_STATE',\n            CHANGE_WIFI_STATE: 'android.permission.CHANGE_WIFI_STATE',\n            CLEAR_APP_CACHE: 'android.permission.CLEAR_APP_CACHE',\n            CLEAR_APP_USER_DATA: 'android.permission.CLEAR_APP_USER_DATA',\n            CONTROL_LOCATION_UPDATES: 'android.permission.CONTROL_LOCATION_UPDATES',\n            DELETE_CACHE_FILES: 'android.permission.DELETE_CACHE_FILES',\n            DELETE_PACKAGES: 'android.permission.DELETE_PACKAGES',\n            DEVICE_POWER: 'android.permission.DEVICE_POWER',\n            DIAGNOSTIC: 'android.permission.DIAGNOSTIC',\n            DISABLE_KEYGUARD: 'android.permission.DISABLE_KEYGUARD',\n            DUMP: 'android.permission.DUMP',\n            EXPAND_STATUS_BAR: 'android.permission.EXPAND_STATUS_BAR',\n            FACTORY_TEST: 'android.permission.FACTORY_TEST',\n            FLASHLIGHT: 'android.permission.FLASHLIGHT',\n            FORCE_BACK: 'android.permission.FORCE_BACK',\n            GET_ACCOUNTS: 'android.permission.GET_ACCOUNTS',\n            GET_PACKAGE_SIZE: 'android.permission.GET_PACKAGE_SIZE',\n            GET_TASKS: 'android.permission.GET_TASKS',\n            GET_TOP_ACTIVITY_INFO: 'android.permission.GET_TOP_ACTIVITY_INFO',\n            GLOBAL_SEARCH: 'android.permission.GLOBAL_SEARCH',\n            HARDWARE_TEST: 'android.permission.HARDWARE_TEST',\n            INJECT_EVENTS: 'android.permission.INJECT_EVENTS',\n            INSTALL_LOCATION_PROVIDER: 'android.permission.INSTALL_LOCATION_PROVIDER',\n            INSTALL_PACKAGES: 'android.permission.INSTALL_PACKAGES',\n            INSTALL_SHORTCUT: 'com.android.launcher.permission.INSTALL_SHORTCUT',\n            INTERNAL_SYSTEM_WINDOW: 'android.permission.INTERNAL_SYSTEM_WINDOW',\n            INTERNET: 'android.permission.INTERNET',\n            KILL_BACKGROUND_PROCESSES: 'android.permission.KILL_BACKGROUND_PROCESSES',\n            LOCATION_HARDWARE: 'android.permission.LOCATION_HARDWARE',\n            MANAGE_ACCOUNTS: 'android.permission.MANAGE_ACCOUNTS',\n            MANAGE_APP_TOKENS: 'android.permission.MANAGE_APP_TOKENS',\n            MANAGE_DOCUMENTS: 'android.permission.MANAGE_DOCUMENTS',\n            MASTER_CLEAR: 'android.permission.MASTER_CLEAR',\n            MEDIA_CONTENT_CONTROL: 'android.permission.MEDIA_CONTENT_CONTROL',\n            MODIFY_AUDIO_SETTINGS: 'android.permission.MODIFY_AUDIO_SETTINGS',\n            MODIFY_PHONE_STATE: 'android.permission.MODIFY_PHONE_STATE',\n            MOUNT_FORMAT_FILESYSTEMS: 'android.permission.MOUNT_FORMAT_FILESYSTEMS',\n            MOUNT_UNMOUNT_FILESYSTEMS: 'android.permission.MOUNT_UNMOUNT_FILESYSTEMS',\n            NFC: 'android.permission.NFC',\n            PERSISTENT_ACTIVITY: 'android.permission.PERSISTENT_ACTIVITY',\n            PROCESS_OUTGOING_CALLS: 'android.permission.PROCESS_OUTGOING_CALLS',\n            READ_CALENDAR: 'android.permission.READ_CALENDAR',\n            READ_CALL_LOG: 'android.permission.READ_CALL_LOG',\n            READ_CONTACTS: 'android.permission.READ_CONTACTS',\n            READ_EXTERNAL_STORAGE: 'android.permission.READ_EXTERNAL_STORAGE',\n            READ_FRAME_BUFFER: 'android.permission.READ_FRAME_BUFFER',\n            READ_HISTORY_BOOKMARKS: 'com.android.browser.permission.READ_HISTORY_BOOKMARKS',\n            READ_INPUT_STATE: 'android.permission.READ_INPUT_STATE',\n            READ_LOGS: 'android.permission.READ_LOGS',\n            READ_PHONE_STATE: 'android.permission.READ_PHONE_STATE',\n            READ_PROFILE: 'android.permission.READ_PROFILE',\n            READ_SMS: 'android.permission.READ_SMS',\n            READ_SOCIAL_STREAM: 'android.permission.READ_SOCIAL_STREAM',\n            READ_SYNC_SETTINGS: 'android.permission.READ_SYNC_SETTINGS',\n            READ_SYNC_STATS: 'android.permission.READ_SYNC_STATS',\n            READ_USER_DICTIONARY: 'android.permission.READ_USER_DICTIONARY',\n            READ_VOICEMAIL: 'com.android.voicemail.permission.READ_VOICEMAIL',\n            REBOOT: 'android.permission.REBOOT',\n            RECEIVE_BOOT_COMPLETED: 'android.permission.RECEIVE_BOOT_COMPLETED',\n            RECEIVE_MMS: 'android.permission.RECEIVE_MMS',\n            RECEIVE_SMS: 'android.permission.RECEIVE_SMS',\n            RECEIVE_WAP_PUSH: 'android.permission.RECEIVE_WAP_PUSH',\n            RECORD_AUDIO: 'android.permission.RECORD_AUDIO',\n            REORDER_TASKS: 'android.permission.REORDER_TASKS',\n            RESTART_PACKAGES: 'android.permission.RESTART_PACKAGES',\n            SEND_RESPOND_VIA_MESSAGE: 'android.permission.SEND_RESPOND_VIA_MESSAGE',\n            SEND_SMS: 'android.permission.SEND_SMS',\n            SET_ACTIVITY_WATCHER: 'android.permission.SET_ACTIVITY_WATCHER',\n            SET_ALARM: 'com.android.alarm.permission.SET_ALARM',\n            SET_ALWAYS_FINISH: 'android.permission.SET_ALWAYS_FINISH',\n            SET_ANIMATION_SCALE: 'android.permission.SET_ANIMATION_SCALE',\n            SET_DEBUG_APP: 'android.permission.SET_DEBUG_APP',\n            SET_ORIENTATION: 'android.permission.SET_ORIENTATION',\n            SET_POINTER_SPEED: 'android.permission.SET_POINTER_SPEED',\n            SET_PREFERRED_APPLICATIONS: 'android.permission.SET_PREFERRED_APPLICATIONS',\n            SET_PROCESS_LIMIT: 'android.permission.SET_PROCESS_LIMIT',\n            SET_TIME: 'android.permission.SET_TIME',\n            SET_TIME_ZONE: 'android.permission.SET_TIME_ZONE',\n            SET_WALLPAPER: 'android.permission.SET_WALLPAPER',\n            SET_WALLPAPER_HINTS: 'android.permission.SET_WALLPAPER_HINTS',\n            SIGNAL_PERSISTENT_PROCESSES: 'android.permission.SIGNAL_PERSISTENT_PROCESSES',\n            STATUS_BAR: 'android.permission.STATUS_BAR',\n            SUBSCRIBED_FEEDS_READ: 'android.permission.SUBSCRIBED_FEEDS_READ',\n            SUBSCRIBED_FEEDS_WRITE: 'android.permission.SUBSCRIBED_FEEDS_WRITE',\n            SYSTEM_ALERT_WINDOW: 'android.permission.SYSTEM_ALERT_WINDOW',\n            TRANSMIT_IR: 'android.permission.TRANSMIT_IR',\n            UNINSTALL_SHORTCUT: 'com.android.launcher.permission.UNINSTALL_SHORTCUT',\n            UPDATE_DEVICE_STATS: 'android.permission.UPDATE_DEVICE_STATS',\n            USE_CREDENTIALS: 'android.permission.USE_CREDENTIALS',\n            USE_SIP: 'android.permission.USE_SIP',\n            VIBRATE: 'android.permission.VIBRATE',\n            WAKE_LOCK: 'android.permission.WAKE_LOCK',\n            WRITE_APN_SETTINGS: 'android.permission.WRITE_APN_SETTINGS',\n            WRITE_CALENDAR: 'android.permission.WRITE_CALENDAR',\n            WRITE_CALL_LOG: 'android.permission.WRITE_CALL_LOG',\n            WRITE_CONTACTS: 'android.permission.WRITE_CONTACTS',\n            WRITE_EXTERNAL_STORAGE: 'android.permission.WRITE_EXTERNAL_STORAGE',\n            WRITE_GSERVICES: 'android.permission.WRITE_GSERVICES',\n            WRITE_HISTORY_BOOKMARKS: 'com.android.browser.permission.WRITE_HISTORY_BOOKMARKS',\n            WRITE_PROFILE: 'android.permission.WRITE_PROFILE',\n            WRITE_SECURE_SETTINGS: 'android.permission.WRITE_SECURE_SETTINGS',\n            WRITE_SETTINGS: 'android.permission.WRITE_SETTINGS',\n            WRITE_SMS: 'android.permission.WRITE_SMS',\n            WRITE_SOCIAL_STREAM: 'android.permission.WRITE_SOCIAL_STREAM',\n            WRITE_SYNC_SETTINGS: 'android.permission.WRITE_SYNC_SETTINGS',\n            WRITE_USER_DICTIONARY: 'android.permission.WRITE_USER_DICTIONARY',\n            WRITE_VOICEMAIL: 'com.android.voicemail.permission.WRITE_VOICEMAIL'\n        };\n        return _this;\n    }\n    /**\n     * Check permission\n     * @param {string} permission The name of the permission\n     * @return {Promise<any>} Returns a promise\n     */\n    /**\n       * Check permission\n       * @param {string} permission The name of the permission\n       * @return {Promise<any>} Returns a promise\n       */\n    AndroidPermissions.prototype.checkPermission = /**\n       * Check permission\n       * @param {string} permission The name of the permission\n       * @return {Promise<any>} Returns a promise\n       */\n    function (permission) {\n        return;\n    };\n    /**\n     * Request permission\n     * @param {string} permission The name of the permission to request\n     * @return {Promise<any>}\n     */\n    /**\n       * Request permission\n       * @param {string} permission The name of the permission to request\n       * @return {Promise<any>}\n       */\n    AndroidPermissions.prototype.requestPermission = /**\n       * Request permission\n       * @param {string} permission The name of the permission to request\n       * @return {Promise<any>}\n       */\n    function (permission) {\n        return;\n    };\n    /**\n     * Request permissions\n     * @param {Array<string>} permissions An array with permissions\n     * @return {Promise<any>} Returns a promise\n     */\n    /**\n       * Request permissions\n       * @param {Array<string>} permissions An array with permissions\n       * @return {Promise<any>} Returns a promise\n       */\n    AndroidPermissions.prototype.requestPermissions = /**\n       * Request permissions\n       * @param {Array<string>} permissions An array with permissions\n       * @return {Promise<any>} Returns a promise\n       */\n    function (permissions) {\n        return;\n    };\n    /**\n     * This function still works now, will not support in the future.\n     * @param {string} permission The name of the permission\n     * @return {Promise<any>} Returns a promise\n     */\n    /**\n       * This function still works now, will not support in the future.\n       * @param {string} permission The name of the permission\n       * @return {Promise<any>} Returns a promise\n       */\n    AndroidPermissions.prototype.hasPermission = /**\n       * This function still works now, will not support in the future.\n       * @param {string} permission The name of the permission\n       * @return {Promise<any>} Returns a promise\n       */\n    function (permission) {\n        return;\n    };\n    AndroidPermissions.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], AndroidPermissions.prototype, \"checkPermission\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], AndroidPermissions.prototype, \"requestPermission\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Array]),\n        __metadata(\"design:returntype\", Promise)\n    ], AndroidPermissions.prototype, \"requestPermissions\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String]),\n        __metadata(\"design:returntype\", Promise)\n    ], AndroidPermissions.prototype, \"hasPermission\", null);\n    /**\n     * @name Android Permissions\n     * @description\n     * This plugin is designed to support Android new permissions checking mechanism.\n     *\n     * You can find all permissions here: https://developer.android.com/reference/android/Manifest.permission.html\n     *\n     * @usage\n     * ```\n     * import { AndroidPermissions } from '@ionic-native/android-permissions';\n     *\n     *\n     * constructor(private androidPermissions: AndroidPermissions) { }\n     *\n     * ...\n     *\n     * this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.CAMERA).then(\n     *   result => console.log('Has permission?',result.hasPermission),\n     *   err => this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.CAMERA)\n     * );\n     *\n     * this.androidPermissions.requestPermissions([this.androidPermissions.PERMISSION.CAMERA, this.androidPermissions.PERMISSION.GET_ACCOUNTS]);\n     *\n     * ```\n     *\n     * Android 26 and above: due to Android 26's changes to permissions handling (permissions are requested at time of use rather than at runtime,) if your app does not include any functions (eg. other Ionic Native plugins) that utilize a particular permission, then `requestPermission()` and `requestPermissions()` will resolve immediately with no prompt shown to the user.  Thus, you must include a function utilizing the feature you would like to use before requesting permission for it.\n     */\n    AndroidPermissions = __decorate([\n        Plugin({\n            pluginName: 'AndroidPermissions',\n            plugin: 'cordova-plugin-android-permissions',\n            pluginRef: 'cordova.plugins.permissions',\n            repo: 'https://github.com/NeoLSN/cordova-plugin-android-permissions',\n            platforms: ['Android']\n        })\n    ], AndroidPermissions);\n    return AndroidPermissions;\n}(IonicNativePlugin));\nexport { AndroidPermissions };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/android-permissions/index.js\n// module id = 467\n// module chunks = 9","import { Component } from '@angular/core';\r\nimport { IonicPage, NavController, NavParams, Platform, ViewController } from 'ionic-angular';\r\nimport { ServicesProvider } from '../../providers/services/services';\r\nimport { UtilityProvider } from '../../providers/utility/utility';\r\nimport { Config } from '../../config';\r\nimport { AndroidPermissions } from '@ionic-native/android-permissions';\r\n\r\ndeclare var SMS:any;\r\n/**\r\n* Generated class for the PhoneVerificationPage page.\r\n*\r\n* See https://ionicframework.com/docs/components/#navigation for more info on\r\n* Ionic pages and navigation.\r\n*/\r\n@IonicPage()\r\n@Component({\r\n  selector: 'page-phone-verification',\r\n  templateUrl: 'phone-verification.html',\r\n})\r\nexport class PhoneVerificationPage {\r\n  phone:any\r\n  showotp:Boolean=true\r\n  otp:any\r\n  constructor( public androidPermissions: AndroidPermissions,public platform:Platform,public viewCtrl: ViewController,\r\n    public utility: UtilityProvider, public navCtrl: NavController,\r\n    public navParams: NavParams, public _services: ServicesProvider) {\r\n    }\r\n    ionViewDidLoad() {\r\n      this.androidPermissions.checkPermission(this.androidPermissions.PERMISSION.READ_SMS).then(\r\n        success => console.log('Permission granted'),\r\n        err => this.androidPermissions.requestPermission(this.androidPermissions.PERMISSION.READ_SMS)\r\n        );\r\n        this.androidPermissions.requestPermissions([this.androidPermissions.PERMISSION.READ_SMS]);\r\n        console.log('ionViewDidLoad PhoneVerificationPage');\r\n      }\r\n      sendOTP(){\r\n        let phoneno = /^\\d{10}$/;\r\n        if(phoneno.test(this. phone)===false){\r\n          let msg = {msg: 'Phone number is not valid',duration: 3000,position: 'centre'}\r\n          this.utility.showToast(msg);\r\n          return false;\r\n        }\r\n        let obj={\r\n          phone:this.phone,\r\n          email:Config.USER.email\r\n        }\r\n        console.log(obj);\r\n        this._services.sendOTP(obj).subscribe((response)=>{\r\n          let data=JSON.parse(response.response.data)\r\n          console.log(data);\r\n          if(data.type=='success'){\r\n            this.showotp=false\r\n            //this.watchOTP()\r\n          }\r\n        })\r\n      }\r\n      list(){\r\n    \r\n       \r\nthis.platform.ready().then((readySource) => {\r\n    \r\n  let filter = {\r\n  box : 'inbox', // 'inbox' (default), 'sent', 'draft'\r\n  indexFrom : 0, // start from index 0\r\n  maxCount : 100, // count of SMS to return each time\r\n  };\r\n      \r\n  if(SMS) SMS.listSMS(filter, (ListSms)=>{               \r\n \r\n console.log('====================================')\r\n console.log(ListSms)\r\n console.log('====================================')\r\n  },\r\n      \r\n  Error=>{\r\n  alert(JSON.stringify(Error))\r\n  });\r\n           \r\n  });\r\n      }\r\n\r\n\r\n      clear(){\r\n        this.phone=''\r\n      }\r\n      watchOTP(){\r\n\r\n        \r\n           let smsarrive= new Promise(function(resolve,reject){\r\n            if(SMS) SMS.startWatch(()=>{\r\n              console.log('watching started');\r\n            }, Error=>{\r\n              console.log('failed to start watching');\r\n            });\r\n            document.addEventListener('onSMSArrive', (e:any)=>{\r\n              var sms = e.data;\r\n              console.log(sms);\r\n              resolve(sms)\r\n            });\r\n          })\r\n       \r\n\r\n        console.log(smsarrive);\r\n        \r\n      }\r\n      \r\n\r\n\r\n    \r\n      verifyotp(){\r\n\r\n\r\n        let obj={\r\n          phone:this.phone,\r\n          otp:this.otp\r\n        }\r\n        this._services.verifyOTP(obj).subscribe((response)=>{\r\n          let data=JSON.parse(response.response.data)\r\n          console.log(data);\r\n          if(data.type=='success'){\r\n            let msg={\r\n              msg:\"Verified\",\r\n              duration:3000\r\n            }\r\n            this.utility.showToast(msg)\r\n            this.viewCtrl.dismiss(this.phone);\r\n\r\n          }\r\n          else{\r\n            let msg={\r\n              msg:\"Wrong OTP\",\r\n              duration:3000\r\n            }\r\n            this.utility.showToast(msg)\r\n            this.viewCtrl.dismiss(this.phone);\r\n\r\n          }\r\n        })\r\n\r\n      }\r\n\r\n      dismiss(){\r\n            this.viewCtrl.dismiss(    );\r\n\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    \n\n\n// WEBPACK FOOTER //\n// ./src/pages/phone-verification/phone-verification.ts"],"sourceRoot":""}